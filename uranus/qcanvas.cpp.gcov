		/***************************************************************************
		                          qcanvas.cpp  -  description
		                             -------------------
		    begin                : Tue Jul 23 2002
		    copyright            : (C) 2002 by Marco Bubke
		    email                : marco@bubke.de
		 ***************************************************************************/
		
		/***************************************************************************
		 *                                                                         *
		 *   This program is free software; you can redistribute it and/or modify  *
		 *   it under the terms of the GNU Lesser General Public License as        *
		 *   published by the Free Software Foundation;        version 2.1 of      *
		 *   the License.                                                          *
		 *                                                                         *
		 ***************************************************************************/
		
		#include <GL/gl.h>
		#include "qcanvas.h"
		#include <qapplication.h>
		
		
		
		namespace Ah {
		
		QCanvas::QCanvas(QWidget* parent = 0)
           1     : Canvas(), QGLWidget(QGLFormat(Rgba | DoubleBuffer | NoAccumBuffer | NoStereoBuffers | NoDepthBuffer | StencilBuffer | AlphaChannel), parent)
           1    {
		}
		
		QCanvas::~QCanvas()
      ######    {
      ######    }
		
		void QCanvas::initilizeGL()
		{
      ######    	glEnable(GL_BLEND);
      ######    	glBlendFunc(GL_ONE_MINUS_SRC_ALPHA, GL_SRC_ALPHA);
      ######    	setViewport(width(), height());
		}
		
		void QCanvas::paintGL()
         232    {
		//	glEnable(GL_BLEND);
         232    	glBlendFunc(GL_ONE_MINUS_SRC_ALPHA, GL_SRC_ALPHA);
         232        glEnable(GL_CULL_FACE);
		//    glHint(GL_POLYGON_SMOOTH_HINT, GL_FASTEST);
		//    glEnable(GL_POLYGON_SMOOTH);
         232    	predraw();
		}
		
		void QCanvas::resizeGL(int width, int height)
          39    {
          39    	setViewport(width, height);
		
		}
		
		void QCanvas::postdraw()
         232    {
         232    	Canvas::postdraw();
         232    	swapBuffers();
		}
		
		void QCanvas::keyPressEvent(QKeyEvent* e)
         190    {
         190    	switch(e->key()) {
          16        case Qt::Key_Left : getMatrix()->move(-10.0, 0.0); break;
          16    	case Qt::Key_Right : getMatrix()->move(10.0, 0.0); break;
          21        case Qt::Key_Up : getMatrix()->move(0.0, 10.0); break;
          30        case Qt::Key_Down : getMatrix()->move(0.0, -10.0); break;
      ######        case Qt::Key_Plus : getMatrix()->zoom(0.95); break;
      ######        case Qt::Key_Minus : getMatrix()->zoom(1.05); break;
          31        case Qt::Key_End : getMatrix()->rotate(0.1); break;
          75        case Qt::Key_Next : getMatrix()->rotate(-0.1); break;
           1    	case Qt::Key_Q : qApp->quit(); break;
		    }
         190    	paintGL();
		
		}
		
		};
		
		
