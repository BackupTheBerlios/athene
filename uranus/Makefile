#############################################################################
# Makefile for building: athene
# Generated by qmake (1.02a) on: Mon Jul 29 17:11:15 2002
# Project:  athene.pro
# Template: app
# Command: $(QMAKE) -spec linux-g++ athene.pro
#############################################################################

####### Compiler, tools and options

CC       = gcc
CXX      = g++
LEX      = flex
YACC     = yacc
CFLAGS   = -pipe -Wall -W -g  
CXXFLAGS = -pipe -Wall -W -g  
LEXFLAGS = 
YACCFLAGS= -d
INCPATH  = -I$(QTDIR)/include -I/usr/X11R6/include -I/usr/X11R6/include -I$(QTDIR)/mkspecs/linux-g++
LINK     = g++
LFLAGS   = 
LIBS     = $(SUBLIBS) -Wl,-rpath,$(QTDIR)/lib -L$(QTDIR)/lib -L/usr/X11R6/lib -L/usr/X11R6/lib -lqt -lGLU -lGL -lXmu -lXext -lX11 -lm
AR       = ar cqs
RANLIB   = 
MOC      = $(QTDIR)/bin/moc
UIC      = $(QTDIR)/bin/uic
QMAKE    = qmake
TAR      = tar -cf
GZIP     = gzip -9f
COPY     = cp -f
COPY_FILE= $(COPY) -p
COPY_DIR = $(COPY) -pR
DEL_FILE = rm -f
DEL_DIR  = rmdir
MOVE     = mv

####### Output directory

OBJECTS_DIR = ./

####### Files

HEADERS = canvas.h \
		color.h \
		context.h \
		node.h \
		qcanvas.h \
		shader.h \
		group.h \
		shape.h \
		matrix.h \
		modelviewmatrixstack.h \
		referencecounter.h \
		simpleshader.h \
		element.h \
		texture.h \
		textureshader.h \
		holder.h \
		selector.h
SOURCES = canvas.cpp \
		color.cpp \
		context.cpp \
		main.cpp \
		node.cpp \
		qcanvas.cpp \
		shader.cpp \
		group.cpp \
		shape.cpp \
		matrix.cpp \
		modelviewmatrixstack.cpp \
		rectangle.cpp \
		referencecounter.cpp \
		simpleshader.cpp \
		element.cpp \
		texture.cpp \
		textureshader.cpp \
		holder.cpp \
		selector.cpp
OBJECTS = canvas.o \
		color.o \
		context.o \
		main.o \
		node.o \
		qcanvas.o \
		shader.o \
		group.o \
		shape.o \
		matrix.o \
		modelviewmatrixstack.o \
		rectangle.o \
		referencecounter.o \
		simpleshader.o \
		element.o \
		texture.o \
		textureshader.o \
		holder.o \
		selector.o
FORMS = 
UICDECLS = 
UICIMPLS = 
SRCMOC   = 
OBJMOC = 
DIST	   = 
QMAKE_TARGET = athene
DESTDIR  = 
TARGET   = athene

first: all
####### Implicit rules

.SUFFIXES: .c .cpp .cc .cxx .C

.cpp.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.cc.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.cxx.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.C.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.c.o:
	$(CC) -c $(CFLAGS) $(INCPATH) -o $@ $<

####### Build rules

all: Makefile $(TARGET)

$(TARGET): $(UICDECLS) $(OBJECTS) $(OBJMOC) 
	$(LINK) $(LFLAGS) -o $(TARGET) $(OBJECTS) $(OBJMOC) $(LIBS)

mocables: $(SRCMOC)

$(MOC): 
	( cd $(QTDIR)/src/moc ; $(MAKE) )

Makefile: athene.pro  $(QTDIR)/mkspecs/linux-g++/qmake.conf 
	$(QMAKE) -spec linux-g++ athene.pro
qmake: 
	@$(QMAKE) -spec linux-g++ athene.pro

dist: 
	@mkdir -p .tmp/athene && $(COPY_FILE) --parents $(SOURCES) $(HEADERS) $(FORMS) $(DIST) .tmp/athene/ && ( cd `dirname .tmp/athene` && $(TAR) athene.tar athene && $(GZIP) athene.tar ) && mv `dirname .tmp/athene`/athene.tar.gz . && rm -rf .tmp/athene

mocclean:

uiclean:

clean:
	-rm -f $(OBJECTS) 
	-rm -f *~ core *.core


####### Sub-libraries

distclean: clean
	-rm -f $(TARGET) $(TARGET)
	

FORCE:

####### Compile

canvas.o: canvas.cpp canvas.h \
		simpleshader.h \
		color.h \
		group.h \
		modelviewmatrixstack.h \
		referencecounter.h \
		node.h \
		element.h \
		shader.h \
		matrix.h

color.o: color.cpp color.h \
		referencecounter.h

context.o: context.cpp context.h

main.o: main.cpp qcanvas.h \
		rectangle.h \
		color.h \
		simpleshader.h \
		texture.h \
		textureshader.h \
		canvas.h \
		group.h \
		modelviewmatrixstack.h \
		referencecounter.h \
		node.h \
		element.h \
		shader.h \
		matrix.h \
		shape.h

node.o: node.cpp node.h \
		exceptions.h \
		group.h \
		element.h \
		modelviewmatrixstack.h \
		shader.h \
		matrix.h \
		referencecounter.h

qcanvas.o: qcanvas.cpp qcanvas.h \
		holder.h \
		canvas.h \
		color.h \
		group.h \
		modelviewmatrixstack.h \
		referencecounter.h \
		node.h \
		element.h \
		shader.h \
		matrix.h

shader.o: shader.cpp shader.h \
		canvas.h \
		referencecounter.h \
		color.h \
		group.h \
		modelviewmatrixstack.h \
		node.h \
		element.h \
		matrix.h

group.o: group.cpp group.h \
		node.h \
		element.h \
		modelviewmatrixstack.h \
		shader.h \
		matrix.h \
		referencecounter.h

shape.o: shape.cpp shape.h \
		node.h \
		color.h \
		element.h \
		modelviewmatrixstack.h \
		shader.h \
		matrix.h \
		referencecounter.h

matrix.o: matrix.cpp matrix.h \
		referencecounter.h

modelviewmatrixstack.o: modelviewmatrixstack.cpp modelviewmatrixstack.h \
		matrix.h \
		referencecounter.h

rectangle.o: rectangle.cpp rectangle.h \
		shape.h \
		node.h \
		color.h \
		element.h \
		modelviewmatrixstack.h \
		shader.h \
		matrix.h \
		referencecounter.h

referencecounter.o: referencecounter.cpp referencecounter.h

simpleshader.o: simpleshader.cpp simpleshader.h \
		shader.h \
		color.h \
		referencecounter.h

element.o: element.cpp element.h \
		holder.h \
		group.h \
		referencecounter.h \
		node.h \
		modelviewmatrixstack.h \
		shader.h \
		matrix.h

texture.o: texture.cpp texture.h \
		referencecounter.h

textureshader.o: textureshader.cpp textureshader.h \
		canvas.h \
		simpleshader.h \
		texture.h \
		shader.h \
		color.h \
		referencecounter.h \
		group.h \
		modelviewmatrixstack.h \
		node.h \
		element.h \
		matrix.h

holder.o: holder.cpp holder.h \
		group.h \
		referencecounter.h \
		node.h \
		element.h \
		modelviewmatrixstack.h \
		shader.h \
		matrix.h

selector.o: selector.cpp selector.h \
		referencecounter.h

####### Install

install: all 

uninstall: 

